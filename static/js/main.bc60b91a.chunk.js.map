{"version":3,"sources":["logo.svg","components/clock-watcher.js","App.js","reportWebVitals.js","index.js"],"names":["ClockWatcher","props","canvas","ctx","radius","dateUTC","utc","canvasID","id","date","Date","state","toLocaleString","timeZone","running","showClock","afterClickShowHide","this","document","getElementById","getContext","height","translate","setState","firstRun","timerID","setInterval","tick","clearInterval","drawClock","drawFace","drawNumbers","drawTime","grad","beginPath","arc","Math","PI","fillStyle","fill","createRadialGradient","addColorStop","strokeStyle","lineWidth","stroke","ang","num","font","textBaseline","textAlign","rotate","fillText","toString","now","hour","getHours","minute","getMinutes","second","getSeconds","drawHand","pos","length","width","lineCap","moveTo","lineTo","alert","console","log","style","backgroundColor","onClick","resumeClockWatcher","stopClockWatcher","showToday","showHide","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bc60b91a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\r\n\r\nclass ClockWatcher extends Component {\r\n\r\n  canvas = \"\";\r\n  ctx = \"\";\r\n  radius = \"\";\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.dateUTC = props.utc;\r\n    this.canvasID = props.id;\r\n    var date = new Date();\r\n    this.state = {date: new Date(date.toLocaleString('en-US', { timeZone: this.dateUTC })), running: true, showClock: true, afterClickShowHide: false};\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Draw clock watcher\r\n    this.canvas = document.getElementById(\"canvas\" + this.canvasID);\r\n    this.ctx = this.canvas.getContext(\"2d\");\r\n    this.radius = this.canvas.height / 2;\r\n    this.ctx.translate(this.radius, this.radius);\r\n    this.radius = this.radius * 0.90;\r\n\r\n    this.setState({firstRun: false});\r\n\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.afterClickShowHide && this.state.showClock)\r\n    {\r\n      // Draw clock watcher\r\n      this.canvas = document.getElementById(\"canvas\" + this.canvasID);\r\n      this.ctx = this.canvas.getContext(\"2d\");\r\n      this.radius = this.canvas.height / 2;\r\n      this.ctx.translate(this.radius, this.radius);\r\n      this.radius = this.radius * 0.90;\r\n      this.setState({afterClickShowHide: false});\r\n    }\r\n  }\r\n\r\n  tick() {\r\n    if (this.state.running)\r\n    {\r\n      var date = new Date();\r\n      this.setState({\r\n        date: new Date(date.toLocaleString('en-US', { timeZone: this.dateUTC })), running: true\r\n      });\r\n\r\n      this.drawClock(this.state.date);\r\n    }\r\n  }\r\n\r\n  // Functions re-draw clock watcher\r\n  drawClock(date) {\r\n    this.drawFace(this.ctx, this.radius);\r\n    this.drawNumbers(this.ctx, this.radius);\r\n    this.drawTime(this.ctx, this.radius, date);\r\n  }\r\n  \r\n  drawFace(ctx, radius) {\r\n    var grad;\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, radius, 0, 2*Math.PI);\r\n    ctx.fillStyle = 'white';\r\n    ctx.fill();\r\n    grad = ctx.createRadialGradient(0,0,radius*0.95, 0,0,radius*1.05);\r\n    grad.addColorStop(0, '#333');\r\n    grad.addColorStop(0.5, 'white');\r\n    grad.addColorStop(1, '#333');\r\n    ctx.strokeStyle = grad;\r\n    ctx.lineWidth = radius*0.1;\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, radius*0.1, 0, 2*Math.PI);\r\n    ctx.fillStyle = '#333';\r\n    ctx.fill();\r\n  }\r\n  \r\n  drawNumbers(ctx, radius) {\r\n    var ang;\r\n    var num;\r\n    ctx.font = radius*0.15 + \"px arial\";\r\n    ctx.textBaseline=\"middle\";\r\n    ctx.textAlign=\"center\";\r\n    for(num = 1; num < 13; num++){\r\n      ang = num * Math.PI / 6;\r\n      ctx.rotate(ang);\r\n      ctx.translate(0, -radius*0.85);\r\n      ctx.rotate(-ang);\r\n      ctx.fillText(num.toString(), 0, 0);\r\n      ctx.rotate(ang);\r\n      ctx.translate(0, radius*0.85);\r\n      ctx.rotate(-ang);\r\n    }\r\n  }\r\n  \r\n  drawTime(ctx, radius, date){\r\n      //var now = new Date();\r\n      var now = date;\r\n      var hour = now.getHours();\r\n      var minute = now.getMinutes();\r\n      var second = now.getSeconds();\r\n      //hour\r\n      hour=hour%12;\r\n      hour=(hour*Math.PI/6)+\r\n      (minute*Math.PI/(6*60))+\r\n      (second*Math.PI/(360*60));\r\n      this.drawHand(ctx, hour, radius*0.5, radius*0.07);\r\n      //minute\r\n      minute=(minute*Math.PI/30)+(second*Math.PI/(30*60));\r\n      this.drawHand(ctx, minute, radius*0.8, radius*0.07);\r\n      // second\r\n      second=(second*Math.PI/30);\r\n      this.drawHand(ctx, second, radius*0.9, radius*0.02);\r\n  }\r\n  \r\n  drawHand(ctx, pos, length, width) {\r\n      ctx.beginPath();\r\n      ctx.lineWidth = width;\r\n      ctx.lineCap = \"round\";\r\n      ctx.moveTo(0,0);\r\n      ctx.rotate(pos);\r\n      ctx.lineTo(0, -length);\r\n      ctx.stroke();\r\n      ctx.rotate(-pos);\r\n  }\r\n\r\n  stopClockWatcher() {\r\n    this.setState({running: false});\r\n  }\r\n\r\n  resumeClockWatcher() {\r\n    this.setState({running: true});\r\n  }\r\n\r\n  showToday() {\r\n    alert(\"Hom nay la: \" + this.state.date.toString());\r\n  }\r\n\r\n  showHide() {\r\n    this.setState({afterClickShowHide: true});\r\n    if (this.state.showClock) this.setState({showClock: false});\r\n    else\r\n    {\r\n      \r\n\r\n    this.setState({showClock: true});\r\n    } \r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.running);\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.showClock ? \r\n            <div>\r\n              <canvas id={`canvas` + this.canvasID} width=\"400\" height=\"400\" style={{backgroundColor:'#333'}}></canvas>\r\n            </div> : \r\n            <div></div>\r\n        }\r\n        <div>\r\n          <button id=\"resume\" onClick={() => this.resumeClockWatcher()}>Resume Clock</button>\r\n        </div>\r\n        <div>\r\n          <button id=\"stop\" onClick={() => this.stopClockWatcher()}>Stop Clock</button>\r\n        </div>\r\n        <div>\r\n          <button id=\"xuLySuKien\" onClick={() => this.showToday()}>Show Today</button>\r\n        </div>\r\n        <div>\r\n          <button id={`showHidebtn` + this.canvasID} onClick={() => this.showHide()}>{this.state.showClock ? \"Hide\" : \"Show\"}</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClockWatcher;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport ClockWatcher from './components/clock-watcher.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n\n<ClockWatcher utc={'Asia/Singapore'} id={'1'} />\n<br />\n<ClockWatcher utc={'America/Bahia'} id={'2'} />\n<br />\n<ClockWatcher utc={'Indian/Maldives'} id={'3'} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ClockWatcher from './components/clock-watcher.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}